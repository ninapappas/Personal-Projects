# Global variables 

# Game board 
board = ["-","-","-",
         "-","-","-",
         "-","-","-"]

#If game still going 
gameStillGoing = True 

# Winner or tie 
winner = None 

# Turn 
currentPlayer = "X" 


def displayBoard():
  print("\n")
  print(board[0] + " | " + board[1] + " | " + board[2])
  print(board[3] + " | " + board[4] + " | " + board[5])
  print(board[6] + " | " + board[7] + " | " + board[8])
  print("\n")

def playGame(): 
  
  displayBoard() 
  
  while gameStillGoing: 
    
    handleTurn(currentPlayer) 
    checkIfGameOver() 
    flipPlayer() 

  # Game ended 
  if winner == "X" or winner == "O": 
    print(winner + " won!")
  elif winner == None: 
    print("Tie") 

def handleTurn(player): 
  print(player + " 's turn")
  pos = input("Choose a # from 1-9: ")

  # Make sure input is valid 
  valid = False 
  while not valid: 
    
      while pos not in ["1", "2", "3", "4", "5", "6", "7", "8", "9"]: 
        pos = input("Choose a position from 1-9: ")
      
      pos = int(pos) - 1

      # See if spot is available 
      if board[pos] == "-": 
        valid = True 
      else: 
        print("Cannot play here, try again.")

  pos = int(pos)
  board[pos] = player
  displayBoard()

def checkIfGameOver(): 
  checkForWin() 
  checkForTie()

def checkForWin():
  
  # Set up global variables
  global winner 
  
  #check rows 
  rowWinner = checkRows()
  #check columns
  columnWinner = checkColumns()
  #check diagonals 
  diagonalWinner = checkDiagonals()
  
  if rowWinner: 
    winner = rowWinner
  elif columnWinner: 
    winner = columnWinner
  elif diagonalWinner: 
    winner = diagonalWinner 
  else:
    winner = None
  return 

def checkRows():
  
  global gameStillGoing

  # Check if rows are equal and not empty 
  row1 = board[0] == board[1] == board[2] != "-"
  row2 = board[3] == board[4] == board[5] != "-"
  row3 = board[6] == board[7] == board[8] != "-"
  
  if row1 or row2 or row3: 
    gameStillGoing = False

  # Return winner 
  if row1: 
    return board[0]
  elif row2:
    return board[3]
  elif row3: 
    return board[6]
  else: 
    return None 
   

def checkColumns():
  
  global gameStillGoing
  
  col1 = board[0] == board[3] == board[6] != "-"
  col2 = board[1] == board[4] == board[7] != "-"
  col3 = board[2] == board[5] == board[8] != "-"

  if col1 or col2 or col3: 
    gameStillGoing = False

  if col1:
    return board[0]
  elif col2:
    return board[1]
  elif col3:
    return board[2]
  else: 
    return None
   

def checkDiagonals():
  
  global gameStillGoing

  diag1 = board[0] == board[4] == board[8] != "-"
  diag2 = board[2] == board[4] == board[6] != "-"

  if diag1 or diag2: 
    gameStillGoing = False

  if diag1: 
    return board[0]
  elif diag2:
    return board[2]
  else: 
    return None 
   

def checkForTie(): 
  
  global gameStillGoing
  
  if "-" not in board: 
    gameStillGoing = False 
    return True 
  else: 
    return False 

def flipPlayer(): 

  global currentPlayer
  
  if currentPlayer == "X": 
    currentPlayer = "O" 
  elif currentPlayer == "O":
    currentPlayer = "X"
  return

playGame()
